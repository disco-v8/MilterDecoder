name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build-release:
    name: Build Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: milter_decoder
            asset_name: milter_decoder-linux-x86_64
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            binary_name: milter_decoder
            asset_name: milter_decoder-linux-x86_64-musl
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_name: milter_decoder.exe
            asset_name: milter_decoder-windows-x86_64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            binary_name: milter_decoder
            asset_name: milter_decoder-macos-x86_64

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    
    - name: Install musl tools
      if: matrix.target == 'x86_64-unknown-linux-musl'
      run: sudo apt-get install musl-tools
    
    - name: Build release binary
      run: cargo build --release --target ${{ matrix.target }}
    
    - name: Strip binary (Linux and macOS)
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
      run: strip target/${{ matrix.target }}/release/${{ matrix.binary_name }}
    
    - name: Rename binary
      shell: bash
      run: |
        mkdir -p release-assets
        cp target/${{ matrix.target }}/release/${{ matrix.binary_name }} release-assets/${{ matrix.asset_name }}
    
    - name: Upload Release Assets
      uses: softprops/action-gh-release@v2
      with:
        files: release-assets/${{ matrix.asset_name }}
        draft: false
        prerelease: false
